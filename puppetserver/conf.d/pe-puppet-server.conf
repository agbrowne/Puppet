# configuration for the JRuby interpreters
jruby-puppet: {
    # Where the puppet-agent dependency places puppet, facter, etc...
    # Puppet server expects to load Puppet from this location
    ruby-load-path: [
        "/opt/puppetlabs/puppet/lib/ruby/vendor_ruby",
        "/opt/puppetlabs/puppet/cache/lib",
        "/opt/puppetlabs/server/apps/bolt-server/lib/ruby/vendor_ruby"
    ]

    # This setting determines where JRuby will install gems.  It is used for loading gems,
    # and also by the `puppetserver gem` command line tool.
    gem-home: /opt/puppetlabs/server/data/puppetserver/jruby-gems

    # This setting defines the complete "GEM_PATH" for jruby.  If set, it should include
    # the gem-home directory as well as any other directories that gems can be loaded
    # from (including the vendored gems directory for gems that ship with puppetserver)
    gem-path: [
      ${jruby-puppet.gem-home},
      "/opt/puppetlabs/server/data/puppetserver/vendored-jruby-gems",
      "/opt/puppetlabs/puppet/lib/ruby/vendor_gems"
    ]

    # (optional) path to puppet conf dir; if not specified, will use the puppet default
    master-conf-dir: /etc/puppetlabs/puppet

    # (optional) path to puppet code dir; if not specified, will use
    # /etc/puppetlabs/code
    master-code-dir: /etc/puppetlabs/code

    # (optional) path to puppet var dir; if not specified, will use the puppet default
    master-var-dir: /opt/puppetlabs/server/data/puppetserver

    # (optional) path to puppet run dir; if not specified, will use
    # /var/run/puppetlabs/puppetserver
    master-run-dir: /var/run/puppetlabs/puppetserver

    # (optional) path to puppet log dir; if not specified, will use
    # /var/log/puppetlabs/puppetserver
    master-log-dir: /var/log/puppetlabs/puppetserver

    # (optional) Authorize access to Puppet master endpoints via rules specified
    # in the legacy Puppet auth.conf file (if true or not specified) or via rules
    # specified in the Puppet Server HOCON-formatted auth.conf (if false).
    use-legacy-auth-conf: false
    boltlib-path: [
        "/opt/puppetlabs/server/apps/bolt-server/lib/modules"
    ]
    max-requests-per-instance: 100000
    multithreaded: false
    compile-mode: "jit"
}

# settings related to profiling the puppet Ruby code
profiler: {
    # enable or disable profiling for the Ruby code; defaults to 'false'.
    # note that enabling this setting also requires enabling the 'metrics' service.
    enabled: true
}

pe-puppetserver: {
  puppet-code-repo: puppet-code
  pre-commit-hook-commands: [
      "/opt/puppetlabs/server/bin/generate-puppet-types.rb"
  ]
}
bolt: {
  projects-dir: "/etc/puppetlabs/puppetserver/projects"
  builtin-content-dir: [
      "/opt/puppetlabs/server/data/builtin_bolt_content",
      "/opt/puppetlabs/server/apps/bolt-server/lib/modules/default_builtin_content"
  ]
}
http-client: {
  ssl-protocols: [
  
      "TLSv1.3",
  
      "TLSv1.2"
  
  ]
  cipher-suites: [
      "TLS_AES_256_GCM_SHA384",
      "TLS_AES_128_GCM_SHA256",
      "TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384",
      "TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384",
      "TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256",
      "TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256",
      "TLS_DHE_RSA_WITH_AES_256_GCM_SHA384",
      "TLS_DHE_RSA_WITH_AES_128_GCM_SHA256"
  ]
}
